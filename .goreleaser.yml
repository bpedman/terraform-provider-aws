archives:
  - files:
      # Ensure only built binary is archived
    format: zip
    name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}'
before:
  hooks:
    - 'go mod download'
builds:
  -
    binary: '{{ .ProjectName }}_v{{ .Version }}'
    env:
      - CGO_ENABLED=0
    flags:
      - -trimpath
    goos:
      - darwin
#      - freebsd
      - linux
#      - openbsd
#      - windows
    goarch:
      - '386'
      - amd64
#      - arm
      - arm64
    ignore:
      - goarch: arm
        goos: windows
      - goarch: arm64
        goos: freebsd
      - goarch: arm64
        goos: windows
      - goarch: arm64
        goos: openbsd
      - goarch: 386
        goos: darwin
    ldflags:
      - -s -w -X 'github.com/bpedman/terraform-provider-aws/version.ProviderVersion={{ .Version }}' -X main.version={{.Version}} -X main.commit={{.Commit}}'
    mod_timestamp: '{{ .CommitTimestamp }}'
checksum:
  algorithm: sha256
  extra_files:
    - glob: 'terraform-registry-manifest.json'
      name_template: '{{ .ProjectName }}_{{ .Version }}_manifest.json'
  name_template: '{{ .ProjectName }}_{{ .Version }}_SHA256SUMS'
#publishers:
#  - checksum: true
#    # Terraform CLI 0.10 - 0.11 perform discovery via HTTP headers on releases.hashicorp.com
#    # For providers which have existed since those CLI versions, exclude
#    # discovery by setting the protocol version headers to 5.
#    env:
#      - HC_RELEASES_HOST={{ .Env.HC_RELEASES_HOST }}
#      - HC_RELEASES_KEY={{ .Env.HC_RELEASES_KEY }}
#    cmd: |
#      hc-releases upload -product {{ .ProjectName }} -version {{ .Version }} -file={{ .ArtifactPath }}={{ .ArtifactName }} -header=x-terraform-protocol-version=5 -header=x-terraform-protocol-versions=5.0
#    extra_files:
#      - glob: 'terraform-registry-manifest.json'
#        name_template: '{{ .ProjectName }}_{{ .Version }}_manifest.json'
#    name: upload
#    signature: true
release:
  extra_files:
    - glob: 'terraform-registry-manifest.json'
      name_template: '{{ .ProjectName }}_{{ .Version }}_manifest.json'
signs:
  - artifacts: checksum
    args:
      # if you are using this in a GitHub action or some other automated pipeline, you
      # need to pass the batch flag to indicate its not interactive.
      - "--batch"
      - "--local-user"
      - "{{ .Env.GPG_FINGERPRINT }}" # set this environment variable for your signing key
      - "--output"
      - "${signature}"
      - "--detach-sign"
      - "${artifact}"
snapshot:
  name_template: "{{ .Tag }}-next"
